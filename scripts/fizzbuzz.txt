concat_list = list_pair => {
    left_list = `list_pair;
    right_list = ~list_pair;
    left_list == null ? {
        right_list
    }, {
        ~left_list == null ? {
            `left_list, right_list
        }, {
            `left_list, concat_list(~left_list, ~list_pair)
        }
    }
};

print = string => {
    string != null && ( output(`string); print(~string) )
};

format_int = i => {
    i < 10 ? {
        (i + '0'), null
    }, {
        left = format_int((i - i % 10) / 10);
        right = ((i % 10) + '0'), null;
        concat_list(left, right)
    }
};

filtered_concat = filter_lists_pair => {
    filter = `filter_lists_pair;
    lists = ~filter_lists_pair;
    (filter == null) | (lists == null) ? {
        null
    }, {
        `filter && (
            concat_list(`lists, filtered_concat(~filter, ~lists))
        ) || (
            filtered_concat(~filter, ~lists)
        )
    }
};

fizz = 'F', 'I', 'Z', 'Z', null;
buzz = 'B', 'U', 'Z', 'Z', null;

fizzbuzz = n => {
    n != 1 && fizzbuzz(n-1);
    concat_filter = (n % 3 == 0), (n % 5 == 0), null;
    strings = fizz, buzz, null;
    concated_string = filtered_concat(concat_filter, strings);
    print((concated_string == null) && format_int(n) || concated_string);
    output('\n')
};

fizzbuzz(15)
